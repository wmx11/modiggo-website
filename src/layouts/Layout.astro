---
export interface Props {
	title: string;
}

const { title } = Astro.props;
import NavBar from '../components/NavBar.astro';
import Footer from '../components/sections/Footer.astro';
---

<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Astro description" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<link rel="preconnect" href="https://fonts.googleapis.com" />
		<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
		<link
			href="https://fonts.googleapis.com/css2?family=Montserrat:wght@400;600;700;900&display=swap"
			rel="stylesheet"
		/>
		<title>{title}</title>
	</head>
	<body>
		<main>
			<slot />
			<Footer />
		</main>
	</body>
</html>

<script>
	import { animate, inView, stagger } from 'motion';

	document?.querySelectorAll(`[data-scroll-to]`).forEach((el) => {
		const element = el as HTMLBaseElement;

		element?.addEventListener('click', () => {
			const location = window.location.pathname;
			if (location === '/') {
				document
					?.querySelector(element?.dataset?.scrollTo as string)
					?.scrollIntoView({ behavior: 'smooth' });
				window.history.pushState({}, '', element?.dataset?.scrollTo as string);
			} else {
				window.location.replace(`/${element?.dataset?.scrollTo as string}`);
			}
		});
	});

	inView(
		'section',
		(info) => {
			animate(
				info.target.querySelectorAll('.animate'),
				{
					opacity: [0, 1],
					transform: ['translateY(-50px) rotate(2deg)', 'translateY(0px)'],
				},
				{
					duration: 0.5,
					delay: stagger(0.1),
				}
			);
		},
		{ margin: '-25%' }
	);
</script>

<style is:global>
	:root {
	}

	html {
		color: #0c0c19;
		font-family: 'Montserrat', sans-serif;
	}

	.pattern {
		background-color: transparent;
		opacity: 0.1;
		background-image: linear-gradient(#ffffff50 0.552px, transparent 0.552px),
			linear-gradient(to right, #ffffff50 0.552px, transparent 0.552px);
		background-size: 10px 10px;
	}

	.animate {
		opacity: 0;
	}
</style>
